version: '3'

services:
  gunicorn: &django
    build:
      context: ./ibridge_backend
      dockerfile: ./Dockerfile
    image: django
    restart: always
    depends_on:
      - postgres
    volumes:
      - .:/gunicorn
      - local_media_data:/media
      - local_static_data:/static
    environment:
      - DJANGO_SETTINGS_MODULE=ibridge_backend.settings
      - DEBUG=on
      - ALLOWED_HOSTS=*
      - CORS_ALLOWED_ORIGIN_REGEXES=.*
      - "DATABASE_URL=psql://root:root@postgres:5432/root"
      - API_KEY_SECRET=secret_mako
      - "DJANGO_SECRET_KEY=x3lcsgqrjp@bffoeiw62-9jxo0+_2mj@kvn21h&*vt-@!3f6!2"
      - DJANGO_SUPERUSER_USER=root
      - DJANGO_SUPERUSER_EMAIL=root@example.com
      - DJANGO_SUPERUSER_PASSWORD=root
      - MEDIA_PATH=/media
      - STATIC_PATH=/static
      - WORKERS=3
    expose:
      - 8000
    ports:
      - 8000:8000
    command: /start-gunicorn

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=root
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

volumes:
  local_postgres_data: {}
  local_media_data: {}
  local_static_data: {}
